{"version":3,"sources":["linkBlock1.js","linkBlock2.js","search.js","top5.js","time.js","temperature.js","timeAndWeather.js","buttons.js","charts.js","stocks.js","App.js","reportWebVitals.js","index.js"],"names":["LinkBlock1","className","href","LinkBlock2","Search","action","method","name","target","autocomplete","placeholder","required","type","Top5","Time","today","Date","monthDay","getDate","hours","getHours","day","getDay","month","getMonth","year","getYear","useState","minutes1","setMinutes1","currentDay","currentMonth","setInterval","minutes","getMinutes","Temperature","temperature","setTemperature","weather","setWeather","useEffect","fetch","then","res","json","result","Math","round","current","temp","description","error","console","log","TimeAndWeather","Buttons","to","Charts","props","apiData","data","labels","datasets","label","fill","backgroundColor","borderColor","options","responsive","scaleLabel","display","labelString","fontSize","scales","yAxes","ticks","beginAtZero","layout","Stocks","setApiData","fetchData","apiKey","close","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47e7c9f6.chunk.js","sourcesContent":["const LinkBlock1=()=>{\r\n    return (\r\n        <section className=\"linkBlock1\">\r\n        <h3>Work</h3>\r\n        <ul className=\"linkList\">\r\n            <li><a href=\"https://swedbank.lt\">Swedbank</a></li>\r\n            <li><a href=\"https://gmail.com\">Gmail</a></li>\r\n            <li><a href=\"https://vmi.lt\">Vmi</a></li>\r\n            <li><a href=\"https://sodra.lt\">Sodra</a></li>\r\n            <li><a href=\"https://web.trafi.com/lt/vilnius\">Trafi</a></li>\r\n        </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LinkBlock1;","const LinkBlock2=()=>{\r\n    return (\r\n        <section className=\"linkBlock2\" >\r\n        <h3>Entertainment</h3>\r\n        <ul className=\"linkList\">\r\n            <li><a href=\"https://www.youtube.com\">Youtube</a></li>\r\n            <li><a href=\"https://www.4chan.org\">4chan</a></li>\r\n            <li><a href=\"https://www.420chan.org\">420chan</a></li>\r\n            <li><a href=\"https://www.370chan.lt\">370chan</a></li>\r\n            <li><a href=\"https://www.reddit.com\">Reddit</a></li>\r\n        </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LinkBlock2;","const Search=()=>{\r\n    return (\r\n        <section className=\"searchSection\">\r\n   <form className=\"searchForm\" action=\"https://www.google.com/search\"  method=\"get\" name=\"searchform\" target=\"_blank\" >\r\n       <input autocomplete=\"on\"  name=\"q\" placeholder=\"Search\" required=\"required\"  type=\"text\"></input>\r\n   </form>\r\n   </section>\r\n    )\r\n}\r\n\r\nexport default Search;","const Top5=()=>{\r\n    return(\r\n        <section className=\"top5Section\">\r\n        <ul>\r\n            <li><a href=\"https://www.reddit.com\">Reddit</a></li>\r\n             <li><a href=\"https://news.ycombinator.com\">HackerNews</a></li>\r\n              <li><a href=\"https://www.youtube.com\">Youtube</a></li>\r\n               <li><a href=\"https://www.twitter.com\">Twitter</a></li>\r\n                <li><a href=\"https://www.gmail.com\">Gmail</a></li>\r\n        </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Top5;","import {useState} from 'react';\r\n\r\n\r\n\r\nconst Time=()=>{\r\n    \r\n    {/*Variables*/}\r\n    const today=new Date;\r\n    const monthDay=today.getDate();\r\n    const hours=today.getHours();\r\n    const day=today.getDay();\r\n    const month=today.getMonth();\r\n    const year=today.getYear();\r\n    const [minutes1,setMinutes1]=useState();\r\n    let currentDay='';\r\n    let currentMonth='';\r\n    \r\n    {/*Function that get's called every second to update the current time*/}\r\n   const timeVariables=()=>{\r\n      let today=new Date;\r\n       const minutes=today.getMinutes();\r\n       setMinutes1(minutes);}\r\n\r\n setInterval(timeVariables,1000);\r\n   \r\n    \r\n    \r\n    \r\n    {/*Switch for converting new date output to weekday name string*/}\r\n switch (day) {\r\n  case 0:\r\n    currentDay = \"Sunday\";\r\n    break;\r\n  case 1:\r\n    currentDay = \"Monday\";\r\n    break;\r\n  case 2:\r\n     currentDay = \"Tuesday\";\r\n    break;\r\n  case 3:\r\n    currentDay = \"Wednesday\";\r\n    break;\r\n  case 4:\r\n    currentDay = \"Thursday\";\r\n    break;\r\n  case 5:\r\n    currentDay = \"Friday\";\r\n    break;\r\n  case 6:\r\n    currentDay = \"Saturday\";\r\n}\r\n    \r\n    {/*Converts new date month output number to a month string */}\r\n    \r\n    switch (month) {\r\n  case 0:\r\n    currentMonth = \"January\";\r\n    break;\r\n  case 1:\r\n    currentMonth = \"February\";\r\n    break;\r\n  case 2:\r\n    currentMonth = \"March\";\r\n    break;\r\n   case 3:\r\n    currentMonth = \"April\";\r\n    break;\r\n  case 4:\r\n    currentMonth = \"May\";\r\n    break;\r\n case 5:\r\n    currentMonth = \"June\";\r\n    break;\r\ncase 6:\r\n    currentMonth = \"Jully\";\r\n    break;\r\n case 7:\r\n    currentMonth = \"August\";\r\n    break;\r\n case 8:\r\n    currentMonth = \"September\";\r\n    break;\r\n  case 9 :\r\n    currentMonth = \"October\";\r\n    break;\r\n  case 10:\r\n    currentMonth = \"November\";\r\n    break;\r\n  case 11:\r\n    currentMonth = \"December\";\r\n    break;          \r\n  \r\n}\r\n    \r\n    \r\n    \r\n    \r\n    return(\r\n        <>\r\n        \r\n        <div className=\"timeContainer\">\r\n        \r\n        {/*Adds a zero to the begining of a number if it's a single number*/}\r\n        <div className=\"currentTime\">\r\n        {hours<10 ? <h1>{'0'+hours+':'}</h1> : <h1>{hours+':'}</h1>}\r\n        {minutes1<10 ? <h1>{'0'+minutes1}</h1> : <h1>{minutes1}</h1>}\r\n    \r\n        </div>\r\n        {/*Variable date outputs*/}\r\n        <div className=\"dateOutputs\">\r\n        \r\n       <p>{currentDay}</p>\r\n       <p>{monthDay+'th'}</p>\r\n      \r\n   \r\n       <p>{currentMonth}</p>\r\n       <p>{year+1900}</p>\r\n     \r\n       </div>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Time;","import {useState,useEffect} from 'react';\r\n\r\nconst Temperature=()=>{\r\n   \r\n    {/*Contains returns from an api*/}\r\n    let [temperature,setTemperature]=useState('');\r\n    let [weather,setWeather]=useState('');\r\n    \r\n    {/*Async fetch from an api,sets the state*/}\r\n    useEffect(() => {\r\n    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=54.687157&lon=25.279652&exclude={part}&appid=0ea4f961aae42bfa56f75ca058577e1e&units=metric\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setTemperature(Math.round(result.current.temp)+'°');\r\n           setWeather(result.current.weather[0].description);\r\n            \r\n        },\r\n      \r\n        (error) => {\r\n          console.log('Not working'+error)\r\n        }\r\n      )\r\n  }, [])\r\n    \r\n    \r\n\r\n    \r\n    return(\r\n        \r\n        <section className=\"temperature\">\r\n        <h1>{temperature}</h1>\r\n        <h1>{weather}</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Temperature;","import Time from './time';\r\nimport Weather from './weather';\r\nimport Temperature from './temperature';\r\n\r\n\r\n\r\nconst TimeAndWeather=()=>{\r\n    \r\n    \r\n    return(\r\n        <section className=\"timeAndWeather\">\r\n        <Time/>\r\n        <Temperature/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TimeAndWeather;","import {Link} from 'react-router-dom';\r\n\r\nconst Buttons=()=>{\r\n    return(\r\n        \r\n        <section className=\"buttons\">\r\n          {/*Buttons are actually links :D */}\r\n       \r\n           \r\n           <Link to=\"/\">HomePage</Link>\r\n            <Link to=\"/stocks\">Stocks</Link>\r\n         \r\n          \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import { Line } from 'react-chartjs-2';\r\nimport {useState} from 'react';\r\n\r\n\r\n\r\n\r\n{/*Props passed here are:stock api info.*/}\r\nconst Charts=(props)=>{\r\n    \r\nconsole.log(props.apiData)\r\n{/*Settings for the chart*/}\r\n \r\nconst data = {\r\n  labels: ['1', '2', '3', '4', '5', '6','7'],\r\n  datasets: [\r\n    {\r\n      label: 'Stock price @ close',\r\n      data:props.apiData,\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n}\r\n\r\nconst options = {\r\n    responsive: true,\r\n     scaleLabel: {\r\n                     display: true,\r\n                     labelString: 'Moola',\r\n                     fontSize: 50 \r\n                  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n    layout:{\r\n        \r\n    }\r\n}\r\n\r\n    \r\n    return(\r\n        <div className=\"chart\">\r\n   <Line  data={data} options={options} />\r\n   </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import Charts from './charts';\r\nimport {useState} from 'react';\r\n\r\nconst Stocks=()=>{\r\n    \r\n     const [apiData,setApiData]=useState([1,10,1,10,1,10,1]);   \r\n    \r\n    \r\n    {/*Fetches stock data from an api*/}\r\n     const fetchData=(apiKey)=>{\r\n        fetch(apiKey)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setApiData([result.data[0].close,\r\n                 result.data[1].close,\r\n                 result.data[2].close,\r\n                 result.data[3].close,\r\n                 result.data[4].close,\r\n                 result.data[5].close,\r\n                 result.data[6].close])\r\n        },\r\n        (error) => {\r\n          console.log('Not working'+error)\r\n        }\r\n      )\r\n     }\r\n     \r\n     \r\n     {/*Different api keys depending from the stock*/}\r\n    const TESLA1=\"http://api.marketstack.com/v1/eod?access_key=11702c2bc92a345dad02d2f032829945&symbols=TSLA\";\r\n    const GME1=\"http://api.marketstack.com/v1/eod?access_key=11702c2bc92a345dad02d2f032829945&symbols=GME\";\r\n   const AMD1=\"http://api.marketstack.com/v1/eod?access_key=11702c2bc92a345dad02d2f032829945&symbols=AMD\";\r\n    const INTEL1=\"http://api.marketstack.com/v1/eod?access_key=11702c2bc92a345dad02d2f032829945&symbols=INTC\";\r\n    const APPLE1=\"http://api.marketstack.com/v1/eod?access_key=11702c2bc92a345dad02d2f032829945&symbols=AAPL\";\r\n   \r\n   \r\n    return(\r\n       <section className=\"top5Stocks\">\r\n        <ul>\r\n            <li><button onClick={()=>{fetchData(TESLA1)}}>TESLA</button></li>\r\n             <li><button onClick={()=>{fetchData(GME1)}}>GME</button></li>\r\n              <li><button onClick={()=>{fetchData(AMD1)}}>AMD</button></li>\r\n               <li><button onClick={()=>{fetchData(INTEL1)}}>INTEL</button></li>\r\n                <li><button onClick={()=>{fetchData(APPLE1)}}>APPLE</button></li>\r\n        </ul>\r\n        <Charts className=\"chart\" apiData={apiData} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Stocks; ","import './App.css';\nimport LinkBlock1 from './linkBlock1.js';\nimport LinkBlock2 from './linkBlock2.js';\nimport Search from './search';\nimport Top5 from './top5';\nimport TimeAndWeather from './timeAndWeather';\nimport Buttons from './buttons.js';\nimport Stocks from './stocks.js';\nimport Charts from './charts';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n      \n    <Router>\n    <header>\n    <h4 className=\"name\">Dominykas</h4>\n    <Buttons/>\n    </header>\n    <TimeAndWeather/>\n    <Route exact path=\"/startpage\" component={Top5}/>\n    <Route exact path=\"/\" component={Top5}/>\n    <Search/>\n    <Route path=\"/stocks\" component={Stocks}/>\n    <section className=\"blockSection\">\n    <Route exact path=\"/\" component={LinkBlock1}/>\n    <Route exact path=\"/\" component={LinkBlock2}/>\n    <Route exact path=\"/startpage\" component={LinkBlock1}/>\n    <Route exact path=\"/startpage\" component={LinkBlock2}/>\n    </section>\n    </Router>\n    \n    \n\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}